name: Full Scope Scan with ZAP and Nuclei

on:
  push:
    paths:
      - 'inscope_domains.txt'
      - 'inscope_wildcards.txt'
      - 'newdata_inscope_domains.txt'
      - 'newdata_inscope_wildcards.txt'

jobs:
  full-scan:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout Code
        uses: actions/checkout@v4

      - name: üì° Install Recon Tools
        run: |
          sudo apt update
          sudo apt install -y subfinder unzip
          wget https://github.com/projectdiscovery/katana/releases/latest/download/katana_amd64.zip
          unzip katana_amd64.zip -d /usr/local/bin/
          go install github.com/tomnomnom/waybackurls@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: üìä Recon with Subfinder, Katana, Waybackurls
        run: |
          mkdir -p recon_output
          cat inscope_domains.txt newdata_inscope_domains.txt | sort -u > all_targets.txt
          subfinder -dL all_targets.txt -silent | tee recon_output/subs.txt
          katana -list recon_output/subs.txt -d 2 -silent | tee recon_output/katana.txt
          waybackurls < recon_output/subs.txt | tee recon_output/wayback.txt
          cat recon_output/katana.txt recon_output/wayback.txt | sort -u > recon_output/all_urls.txt

      - name: ‚öîÔ∏è Dynamic ZAP Full Scan (Loop Over URLs)
        env:
          GITHUB_TOKEN: ${{ secrets.SECRET_TOKEN }}
        run: |
          grep -E '^https?://' recon_output/all_urls.txt | sort -u > recon_output/zap_targets.txt
          DATE=$(date +%Y%m%d%H%M%S)
          while read -r target; do
            if [[ -n "$target" ]]; then
              echo "üîç Running ZAP Full Scan on: $target"
              docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py \
                -t "$target" \
                -r "zap_${DATE}_${target//[^a-zA-Z0-9]/_}.html" \
                -g gen.conf \
                -J "zap_${DATE}_${target//[^a-zA-Z0-9]/_}.json" \
                -z "-config view.locale=en_GB"
            fi
          done < recon_output/zap_targets.txt

      - name: ‚ö° Nuclei Vulnerability Scan
        uses: projectdiscovery/nuclei-action@main
        with:
          urls: recon_output/all_urls.txt
          flags: "-severity critical,high,medium -stats -json"

      - name: üì¨ Upload Nuclei Logs
        uses: actions/upload-artifact@v4
        with:
          name: nuclei.log
          path: nuclei.log

      - name: üì¢ Send Discord Webhook (optional)
        if: always()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "‚úÖ Full scope scan completed: ZAP & Nuclei."}' \
               ${{ secrets.DISCORD_WEBHOOK }}

      - name: üóÇÔ∏è Upload ZAP Report Artifact
        uses: actions/upload-artifact@v3
        with:
          name: zap-scan-report
          path: "*.html"

      - name: ‚úÖ Commit and push changes if there are any
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@users.noreply.github.com'
          git add .

          if ! git diff --cached --exit-code; then
            IST_DATE=$(TZ='Asia/Kolkata' date +'%a %b %d %H:%M:%S IST %Y')
            git commit -m "Updated List: $IST_DATE"

            # Pull first to avoid non-fast-forward errors
            git pull --rebase origin main
            git push origin main
          else
            echo "No changes to commit"
          fi

